{
  "name": "quill",
  "scopeName": "source.quill",
  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#constants" },
    { "include": "#keywords" },
    { "include": "#functions" },
    { "include": "#operators" },
    { "include": "#variables" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.quill",
          "match": "#.*$"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.quill",
          "match": "\\b(if|then|else|elsif|elif|end|while|do|for|in|break|continue|return|goto|label)\\b"
        },
        {
          "name": "keyword.other.quill.command",
          "match": "\\b(say|print|ask|input|into|choice|set|to)\\b"
        },
        {
          "name": "keyword.other.quill",
          "match": "\\b(function|func|def|import)\\b"
        },
        {
          "name": "keyword.operator.logical.quill",
          "match": "\\b(and|or|not|is)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.quill",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.quill",
              "match": "\\\\(n|t|r|\\\\|\")"
            }
          ]
        },
        {
          "name": "string.quoted.single.quill",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.quill",
              "match": "\\\\(n|t|r|\\\\|')"
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.quill",
          "match": "\\b[0-9]+(\\.[0-9]+)?\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.builtin.quill",
          "match": "\\b(len|str|int|float|type|range|abs|min|max|sum|round|random|randint)\\b"
        },
        {
          "name": "entity.name.function.quill",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.arithmetic.quill",
          "match": "\\+|\\-|\\*\\*|\\*|/|%"
        },
        {
          "name": "keyword.operator.comparison.quill",
          "match": "==|!=|<=|>=|<|>"
        },
        {
          "name": "keyword.operator.assignment.quill",
          "match": "="
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.quill",
          "match": "\\b(true|false|null|none|True|False|None)\\b"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.quill",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  }
}
